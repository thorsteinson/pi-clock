{:rename-macros {}, :renames {}, :use-macros {run-tests cljs.test}, :excludes #{}, :name pi-clock.core-test, :imports nil, :requires {node cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.test cljs.test, pi-clock.binary-test pi-clock.binary-test}, :uses nil, :defs {-main {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\test\\pi_clock\\core_test.cljs", :line 8, :column 7, :end-line 8, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name pi-clock.core-test/-main, :variadic true, :file "test\\pi_clock\\core_test.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros {cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{pi-clock.binary-test/->binary pad-zeros pi-clock.binary-test/binpad :report-counters :ns :name :file :end-column ->binary binpad :type :column :summary pi-clock.binary-test/pad-zeros :fail pi-clock.binary-test :line :end-run-tests :end-line :begin-test-ns :error :pass :arglists :doc :end-test-ns :test}, :order [:type :fail :error :pass :test :summary :ns pi-clock.binary-test :begin-test-ns pi-clock.binary-test/->binary :name :file :end-column :column :line :end-line :arglists :doc ->binary pi-clock.binary-test/pad-zeros pad-zeros pi-clock.binary-test/binpad binpad :end-test-ns :report-counters :end-run-tests]}, :doc nil}