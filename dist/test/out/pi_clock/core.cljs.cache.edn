{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pi-clock.core, :imports nil, :requires {node cljs.nodejs, cljs.nodejs cljs.nodejs, hardware pi-clock.hardware, pi-clock.hardware pi-clock.hardware, pi-clock.clock pi-clock.clock, pi-clock.binary pi-clock.binary, led pi-clock.led, pi-clock.led pi-clock.led}, :uses {binpad pi-clock.binary, get-time! pi-clock.clock}, :defs {HOURS-REGISTER {:name pi-clock.core/HOURS-REGISTER, :file "src\\pi_clock\\core.cljs", :line 10, :column 1, :end-line 10, :end-column 20, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 10, :column 6, :end-line 10, :end-column 20}}, MINUTES-REGISTER {:name pi-clock.core/MINUTES-REGISTER, :file "src\\pi_clock\\core.cljs", :line 11, :column 1, :end-line 11, :end-column 22, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 11, :column 6, :end-line 11, :end-column 22}}, SECONDS-REGISTER {:name pi-clock.core/SECONDS-REGISTER, :file "src\\pi_clock\\core.cljs", :line 12, :column 1, :end-line 12, :end-column 22, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 12, :column 6, :end-line 12, :end-column 22}}, update-led! {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 14, :column 7, :end-line 14, :end-column 18, :arglists (quote ([{pin :pin, on? :on}]))}, :name pi-clock.core/update-led!, :variadic false, :file "src\\pi_clock\\core.cljs", :end-column 18, :method-params ([p__8789]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{pin :pin, on? :on}]))}, assign-leds {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 19, :column 7, :end-line 19, :end-column 18, :arglists (quote ([register n]))}, :name pi-clock.core/assign-leds, :variadic false, :file "src\\pi_clock\\core.cljs", :end-column 18, :method-params ([register n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists (quote ([register n]))}, time->leds {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 24, :column 7, :end-line 24, :end-column 17, :arglists (quote ([{hh :hours, mm :minutes, ss :seconds}]))}, :name pi-clock.core/time->leds, :variadic false, :file "src\\pi_clock\\core.cljs", :end-column 17, :method-params ([p__8794]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{hh :hours, mm :minutes, ss :seconds}]))}, init-pins! {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 29, :column 7, :end-line 29, :end-column 17, :arglists (quote ([]))}, :name pi-clock.core/init-pins!, :variadic false, :file "src\\pi_clock\\core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-time! {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 35, :column 7, :end-line 35, :end-column 19, :arglists (quote ([]))}, :name pi-clock.core/update-time!, :variadic false, :file "src\\pi_clock\\core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, -main {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\core.cljs", :line 39, :column 7, :end-line 39, :end-column 12, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name pi-clock.core/-main, :variadic true, :file "src\\pi_clock\\core.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:seconds :pin :hours :on :minutes}, :order [:pin :on :hours :minutes :seconds]}, :doc nil}