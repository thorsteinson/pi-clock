// Compiled by ClojureScript 1.9.293 {:target :nodejs}
goog.provide('pi_clock.bridge_test');
goog.require('cljs.core');
goog.require('pi_clock.bridge');
goog.require('cljs.test');
pi_clock.bridge_test.assign_leds = (function pi_clock$bridge_test$assign_leds(){
return cljs.test.test_var.call(null,pi_clock.bridge_test.assign_leds.cljs$lang$var);
});
pi_clock.bridge_test.assign_leds.cljs$lang$test = (function (){
try{var values__8524__auto__ = (function (){var x__8014__auto__ = pi_clock.bridge.assign_leds.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),(3));
return cljs.core._conj.call(null,(function (){var x__8014__auto____$1 = cljs.core.seq.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null)], null));
return cljs.core._conj.call(null,cljs.core.List.EMPTY,x__8014__auto____$1);
})(),x__8014__auto__);
})();
var result__8525__auto__ = cljs.core.apply.call(null,cljs.core._EQ_,values__8524__auto__);
if(cljs.core.truth_(result__8525__auto__)){
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"pass","pass",1574159993),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol("bridge","assign-leds","bridge/assign-leds",1389635011,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),(3)),cljs.core.list(new cljs.core.Symbol(null,"seq","seq",-177272256,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null)], null))),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core.cons.call(null,cljs.core._EQ_,values__8524__auto__),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
} else {
cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"fail","fail",1706214930),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol("bridge","assign-leds","bridge/assign-leds",1389635011,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),(3)),cljs.core.list(new cljs.core.Symbol(null,"seq","seq",-177272256,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null)], null))),new cljs.core.Keyword(null,"actual","actual",107306363),cljs.core._conj.call(null,(function (){var x__8014__auto__ = cljs.core.cons.call(null,new cljs.core.Symbol(null,"=","=",-1501502141,null),values__8524__auto__);
return cljs.core._conj.call(null,cljs.core.List.EMPTY,x__8014__auto__);
})(),new cljs.core.Symbol(null,"not","not",1044554643,null)),new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}

return result__8525__auto__;
}catch (e8998){var t__8562__auto__ = e8998;
return cljs.test.do_report.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"type","type",1174270348),new cljs.core.Keyword(null,"error","error",-978969032),new cljs.core.Keyword(null,"expected","expected",1583670997),cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol("bridge","assign-leds","bridge/assign-leds",1389635011,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0)], null),(3)),cljs.core.list(new cljs.core.Symbol(null,"seq","seq",-177272256,null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"pin","pin",-2111774834),(0),new cljs.core.Keyword(null,"on","on",173873944),true], null)], null))),new cljs.core.Keyword(null,"actual","actual",107306363),t__8562__auto__,new cljs.core.Keyword(null,"message","message",-406056002),null], null));
}});

pi_clock.bridge_test.assign_leds.cljs$lang$var = new cljs.core.Var(function(){return pi_clock.bridge_test.assign_leds;},new cljs.core.Symbol("pi-clock.bridge-test","assign-leds","pi-clock.bridge-test/assign-leds",-1002659544,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"ns","ns",441598760),new cljs.core.Keyword(null,"name","name",1843675177),new cljs.core.Keyword(null,"file","file",-1269645878),new cljs.core.Keyword(null,"end-column","end-column",1425389514),new cljs.core.Keyword(null,"column","column",2078222095),new cljs.core.Keyword(null,"line","line",212345235),new cljs.core.Keyword(null,"end-line","end-line",1837326455),new cljs.core.Keyword(null,"arglists","arglists",1661989754),new cljs.core.Keyword(null,"doc","doc",1913296891),new cljs.core.Keyword(null,"test","test",577538877)],[new cljs.core.Symbol(null,"pi-clock.bridge-test","pi-clock.bridge-test",1318830208,null),new cljs.core.Symbol(null,"assign-leds","assign-leds",-469597878,null),"test\\pi_clock\\bridge_test.cljs",21,1,5,5,cljs.core.List.EMPTY,null,(cljs.core.truth_(pi_clock.bridge_test.assign_leds)?pi_clock.bridge_test.assign_leds.cljs$lang$test:null)]));

//# sourceMappingURL=bridge_test.js.map