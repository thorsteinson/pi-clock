{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pi-clock.led, :imports nil, :requires nil, :uses nil, :defs {on {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\led.cljs", :line 3, :column 7, :end-line 3, :end-column 9, :arglists (quote ([led]))}, :name pi-clock.led/on, :variadic false, :file "src\\pi_clock\\led.cljs", :end-column 9, :method-params ([led]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([led]))}, off {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\led.cljs", :line 6, :column 7, :end-line 6, :end-column 10, :arglists (quote ([led]))}, :name pi-clock.led/off, :variadic false, :file "src\\pi_clock\\led.cljs", :end-column 10, :method-params ([led]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([led]))}, toggle {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\led.cljs", :line 9, :column 7, :end-line 9, :end-column 13, :arglists (quote ([led]))}, :name pi-clock.led/toggle, :variadic false, :file "src\\pi_clock\\led.cljs", :end-column 13, :method-params ([led]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([led]))}, make-led {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\led.cljs", :line 12, :column 7, :end-line 12, :end-column 15, :arglists (quote ([pin on?]))}, :name pi-clock.led/make-led, :variadic false, :file "src\\pi_clock\\led.cljs", :end-column 15, :method-params ([pin on?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists (quote ([pin on?]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:pin :on}, :order [:on :pin]}, :doc nil}