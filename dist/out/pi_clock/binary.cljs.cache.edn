{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pi-clock.binary, :imports nil, :requires {s cljs.spec, cljs.spec cljs.spec, clojure.spec cljs.spec, str clojure.string, clojure.string clojure.string}, :uses nil, :defs {->binary {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\binary.cljs", :line 5, :column 7, :end-line 5, :end-column 15, :arglists (quote ([n]))}, :name pi-clock.binary/->binary, :variadic false, :file "src\\pi_clock\\binary.cljs", :end-column 15, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 5, :end-line 5, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, pad-zeros {:protocol-inline nil, :meta {:file "C:\\Users\\caleb\\src\\pi-clock\\src\\pi_clock\\binary.cljs", :line 11, :column 7, :end-line 11, :end-column 16, :arglists (quote ([xs size]))}, :name pi-clock.binary/pad-zeros, :variadic false, :file "src\\pi_clock\\binary.cljs", :end-column 16, :method-params ([xs size]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([xs size]))}}, :require-macros {s cljs.spec, cljs.spec cljs.spec, clojure.spec cljs.spec}, :doc nil}